pipeline {
    agent { label'jenkins-agent' }
    tools {
        jdk 'Java17'
        maven 'Maven3'
}
environment {
        APP_NAME = "register-app-pipeline"
        RELEASE =  "1.0.0"
        DOCKER_USER = "himanis03"
        DOCKER_PASS = 'dockerhub'
        IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
        IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
        JENKINS_API_TOKEN = credentials("JENKINS_API_TOKEN")
        APP_NAME = "register-app-pipeline"
}
stages {
    stage("cleanup workspace"){
          steps {
          cleanWs()
          }
}
  stage("checkout from scm"){
          steps {
              git branch: 'main', credentialsId: 'github', url: 'https://github.com/himani0323/registration-app.git'
          }
  }
  stage("build app"){
      steps {
        sh "mvn clean package"
      }
  }
   stage("test"){
       steps {
            sh "mvn test"
      }
  }
   stage("sonarqube analysis"){
      steps {
      script {
      withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') {
                  sh "mvn sonar:sonar"
      }
      }
      }
  }
    stage("build & push docker image") {
        steps {
            script {
                docker.withRegistry('',DOCKER_PASS) {
                     docker_image = docker.build "${IMAGE_NAME}"
                 }
                  docker.withRegistry('',DOCKER_PASS) {
                      docker_image.push("${IMAGE_TAG}")
                      docker_image.push('latest')
                  }       
                   }   
             }
}
     stage("trigger cd pipeline"){
         steps {
             script{
                 sh "curl -v -k --user admin:${JENKINS_API_TOKEN} -X POST -H 'cache-control: no cache' -H 'content-type: application/x-www-form-urlencoded' --data 'IMAGE_TAG=${IMAGE_TAG}' 'ec2-107-23-19-6.compute-1.amazonaws.com:8080/job/register-app-cd/buildWithParameter?token=gitops-token'"
     }


        
  }
      stage("Update the Deployment Tags") {
            steps {
                sh """
                   cat deployment.yaml
                   sed -i 's/${APP_NAME}.*/${APP_NAME}:${IMAGE_TAG}/g' deployment.yaml
                   cat deployment.yaml
                """
            }
        }

        stage("Push the changed deployment file to Git") {
            steps {
                sh """
                   git config --global user.name "himani0323"
                   git config --global user.email "himanishrma0323@gmail.com"
                   git add deployment.yaml
                   git commit -m "Updated Deployment Manifest"
                """
                withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
                  sh "git push https://github.com/himani0323/registration-app.git main"
                }
            }
} 
}
}

   
 
